package com.cg.controller;
 
import java.security.Principal;
import java.util.List;
 
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
 
import com.cg.dto.VoteDto;
import com.cg.entity.Vote;
import com.cg.service.VoteService;
 
@RestController
@RequestMapping("/votes")
public class VoteController {
 
	@Autowired
	private VoteService voteService;
	@PostMapping
	public Vote addVote(@RequestBody VoteDto voteDto, Principal p) {
		return voteService.addVote(voteDto);        
	}
 
	@GetMapping("/getbyvoteid/{voteId}")
	public Vote getVoteByVoteId(@PathVariable("voteId") int voteId) {
		return voteService.getVoteByVoteId(voteId);
	}
	@GetMapping("/getbyresponseid/{responseId}")
	public List<Vote> getVoteByResponse(@PathVariable("responseId") int responseId){
		return voteService.getVoteByResponse(responseId);
	}
	@GetMapping("/getbydeveloperid/{developerId}")
	public List<Vote> getVoteByDeveloper(@PathVariable("developerId") int developerId){
		return voteService.getVoteByDeveloper(developerId);
	}

 
	@GetMapping("/getallvotes")
	public List<Vote> getAllVotes() {
		return voteService.getAllVotes();
	}
 
	
	@PutMapping("/updatevote/{voteId}")
	public VoteDto updateVote(@PathVariable("voteId") int voteId, @RequestBody VoteDto voteDto, Principal p) {
		voteService.updateVote(voteDto,voteId);
		return voteDto;
	}
	@PutMapping("/upvote/{responseId}")
	public Vote updateUpvote(@PathVariable("responseId") int responseId,@RequestBody VoteDto voteDto, Principal p) {
		return voteService.updateUpvote(voteDto, responseId);
	}
	@PutMapping("/downvote/{responseId}")
	public Vote updateDownvote(@PathVariable("responseId") int responseId,@RequestBody VoteDto voteDto, Principal p) {
			 return voteService.updateDownvote(voteDto, responseId);
	}

 
 
	@DeleteMapping("/{voteId}")
	public void deleteVote(@PathVariable("voteId") int voteId) {
		voteService.deleteVote(voteId);
	}
 
}