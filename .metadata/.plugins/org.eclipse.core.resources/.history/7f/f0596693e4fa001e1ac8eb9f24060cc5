package com.cg.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cg.dto.PostDto;
import com.cg.entity.Developer;
import com.cg.entity.Post;
import com.cg.repository.DeveloperRepository;
import com.cg.service.PostService;

import jakarta.validation.Valid;


@RestController
@RequestMapping("/posts")
public class PostController {
	
	@Autowired
    private PostService postService;
	@Autowired
	DeveloperRepository developerRepository;
	@PostMapping
    public Post addPost(@Valid @RequestBody PostDto postDto, @RequestHeader("loggedInUser") int developerId) {
//		Developer d=developerRepository.findByUserName(userName);
		System.out.println("controller "+developerId);

		postDto.setDeveloperId(developerId);
		System.out.println("after postdto set  "+postDto.getDeveloperId());

        return postService.addPost(postDto);
    }

    @GetMapping
    public List<Post> getAllPosts() {
        return postService.getAllPosts();
    }

    @GetMapping("/getbypostid/{postId}")
    public List<Post> getPostById(@PathVariable("postId") int postId) {
        return postService.getPostById(postId);
    }
    
    @GetMapping("/getbydeveloperid/{developerid}")
    public List<Post>getPostByDeveloperId(@PathVariable("developerid") int developerid) {
        return postService.getPostByDeveloperId(developerid);
    }

    @PutMapping("/{postId}")
    public Post updatePost(@Valid @PathVariable("postId") int postId, @RequestBody PostDto postDto,@RequestHeader("loggedInUser") int developerId) {
        //postDto.setPostId(postId);
//    	Developer d=developerRepository.findByUserName(userName);
		postDto.setDeveloperId(developerId);
        return postService.updatePost(postId, postDto);
    }

    @DeleteMapping("/{postId}")
    public void deletePost(@PathVariable("postId") int postId) {
    	postService.deletePost(postId);
    }
}